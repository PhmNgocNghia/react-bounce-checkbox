{"version":3,"sources":["index.js"],"names":["React","Component","PropTypes","styled","CheckboxWrapper","div","props","size","borderColor","BouncyCheckbox","text","possible","i","charAt","Math","floor","random","length","id","onChange","checked","modifierClass","textClassName","className","_id","makeid","_size","_modifierClass","propTypes","string","number","bool","isRequired","func","modifier"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IACEC,SADF,QAEO,OAFP;AAGA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,gBAAP;AACA,OAAO,sBAAP;;AAEA,IAAMC,kBAAkBD,OAAOE,GAAzB,kBACK;AAAA,SAASC,MAAMC,IAAf;AAAA,CADL,EAEM;AAAA,SAASD,MAAMC,IAAN,GAAW,CAApB;AAAA,CAFN,EAKO;AAAA,SAASD,MAAMC,IAAf;AAAA,CALP,EAMQ;AAAA,SAASD,MAAMC,IAAf;AAAA,CANR,EAOkB;AAAA,SAASD,MAAME,WAAf;AAAA,CAPlB,EAUS;AAAA,SAASF,MAAMC,IAAN,GAAa,CAAtB;AAAA,CAVT,EAWU;AAAA,SAASD,MAAMC,IAAN,GAAa,CAAtB;AAAA,CAXV,EAYU;AAAA,SAASD,MAAMC,IAAN,GAAa,CAAtB;AAAA,CAZV,EAaQ;AAAA,SAASD,MAAMC,IAAN,GAAa,CAAtB;AAAA,CAbR,EAuBW;AAAA,SAASD,MAAMC,IAAN,GAAa,CAAtB;AAAA,CAvBX,EA4BW;AAAA,SAASD,MAAMC,IAAN,GAAa,CAAtB;AAAA,CA5BX,EA6BY;AAAA,SAASD,MAAMC,IAAN,GAAa,CAAtB;AAAA,CA7BZ,CAAN;;IAoCqBE,c;;;;;;;;;;;6BAaV;AACP,UAAIC,OAAO,EAAX;AACA,UAAIC,WAAW,gEAAf;;AAEA,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,CAApB,EAAuBA,GAAvB,EAA4B;AAC1BF,gBAAQC,SAASE,MAAT,CAAgBC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgBL,SAASM,MAApC,CAAhB,CAAR;AACD;;AAED,aAAOP,IAAP;AACD;;;6BAEQ;AAAA,mBAUH,KAAKJ,KAVF;AAAA,UAELY,EAFK,UAELA,EAFK;AAAA,UAGLC,QAHK,UAGLA,QAHK;AAAA,UAILC,OAJK,UAILA,OAJK;AAAA,UAKLb,IALK,UAKLA,IALK;AAAA,UAMLc,aANK,UAMLA,aANK;AAAA,UAOLX,IAPK,UAOLA,IAPK;AAAA,UAQLY,aARK,UAQLA,aARK;AAAA,UASLC,SATK,UASLA,SATK;;AAWP,UAAMC,MAAMN,MAAM,KAAKO,MAAL,EAAlB;AACA,UAAMC,QAAQnB,QAAQ,EAAtB;AACA,UAAMoB,iBAAiBN,iBAAiB,MAAxC;;AAEA,aACE;AAAA;AAAA,UAAK,2BAAyBE,aAAa,EAAtC,CAAL;AACE;AAAC,yBAAD;AAAA,YAAiB,MAAMG,KAAvB,EAA8B,WAAU,oBAAxC;AACE,yCAAO,UAAUP,QAAjB,EAA2B,SAASC,OAApC,EAA6C,MAAK,UAAlD,EAA6D,WAAU,kBAAvE,EAA0F,IAAII,GAA9F,GADF;AAEE,yCAAO,mDAAiDG,cAAxD,EAA0E,SAASH,GAAnF;AAFF,SADF;AAKE;AAAA;AAAA,YAAM,WAAWF,aAAjB;AAAiCZ;AAAjC;AALF,OADF;AASD;;;;EAhDyCT,S;;AAAvBQ,c,CACZmB,S,GAAY;AACjBV,MAAIhB,UAAU2B,MADG;AAEjBtB,QAAML,UAAU4B,MAFC;AAGjBT,iBAAenB,UAAU2B,MAHR;AAIjBT,WAASlB,UAAU6B,IAAV,CAAeC,UAJP;AAKjBb,YAAUjB,UAAU+B,IAAV,CAAeD,UALR;AAMjBE,YAAUhC,UAAU2B,MANH;AAOjBP,iBAAepB,UAAU2B,MAPR;AAQjBnB,QAAMR,UAAU2B,MARC;AASjBN,aAAWrB,UAAU2B;AATJ,C;eADApB,c","file":"index.js","sourcesContent":["import React, {\n  Component\n} from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport './checkbox.css'\nimport './checkbox_theme.css'\n\nconst CheckboxWrapper = styled.div`\n  width: ${props => props.size}px;\n  height: ${props => props.size+5}px ;\n\n  & > label {\n    width: ${props => props.size}px;\n    height: ${props => props.size}px;\n    border: 2px solid ${props => props.borderColor}\n\n    &::before {\n      width: ${props => props.size / 4}px;\n      height: ${props => props.size / 2}px;\n      bottom: ${props => props.size / 2}px;\n      left: ${props => props.size / 6}px;\n    }\n\n    @keyframes CheckAnimation {\n      0% {\n        width: 0px;\n        height: 0px\n      }\n\n      50% {\n        width: ${props => props.size / 4}px;\n        height: 0px\n      }\n\n      100% {\n        width: ${props => props.size / 4}px;\n        height: ${props => props.size / 2}px;\n      }\n    }\n\n  }\n`\n\nexport default class BouncyCheckbox extends Component {\n  static propTypes = {\n    id: PropTypes.string,\n    size: PropTypes.number,\n    modifierClass: PropTypes.string,\n    checked: PropTypes.bool.isRequired,\n    onChange: PropTypes.func.isRequired,\n    modifier: PropTypes.string,\n    textClassName: PropTypes.string,\n    text: PropTypes.string,\n    className: PropTypes.string\n  }\n\n  makeid() {\n    var text = ''\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n\n    for (var i = 0; i < 5; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length))\n    }\n\n    return text\n  }\n\n  render() {\n    const {\n      id,\n      onChange,\n      checked,\n      size,\n      modifierClass,\n      text,\n      textClassName,\n      className\n    } = this.props\n    const _id = id || this.makeid()\n    const _size = size || 20\n    const _modifierClass = modifierClass || 'blue'\n\n    return (\n      <div className={ `bouncechk ${className || ''}` }>\n        <CheckboxWrapper size={_size} className=\"bouncechk__wrapper\" >\n          <input onChange={onChange} checked={checked} type='checkbox' className=\"bouncechk__input\" id={_id} />\n          <label className={`bouncechk__label bouncechk__label--${_modifierClass}`} htmlFor={_id} />\n        </CheckboxWrapper>\n        <span className={textClassName}>{text}</span>\n      </div>\n    )\n  }\n}"]}